[
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">[</span> <span class=\"punctuation-bracket\">]</span>\n",
    "description": "<p>autocmd definitions</p>",
    "example": "<span class=\"punctuation-bracket\">[</span>\n  <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">command</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;echo &#39;Entering a C or C++ file&#39;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">event</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n      <span class=\"string\">&quot;BufEnter&quot;</span>\n      <span class=\"string\">&quot;BufWinEnter&quot;</span>\n    <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">pattern</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n      <span class=\"string\">&quot;*.c&quot;</span>\n      <span class=\"string\">&quot;*.h&quot;</span>\n    <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span>\n<span class=\"punctuation-bracket\">]</span>\n",
    "read_only": false,
    "type": "list of (submodule)",
    "name": "autoCmd"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Buffer number for buffer local autocommands |autocmd-buflocal|.\nCannot be used with <code>pattern</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or signed integer",
    "name": "autoCmd.*.buffer"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>A function or a string.</p>\n<ul>\n<li>if a string, the name of a Vimscript function to call when this autocommand is triggered.</li>\n<li>Otherwise, a Lua function which is called when this autocommand is triggered.\nCannot be used with <code>command</code>.\nLua callbacks can return true to delete the autocommand; in addition, they accept a single\ntable argument with the following keys:\n<ul>\n<li>id: (number) the autocommand id</li>\n<li>event: (string) the name of the event that triggered the autocommand |autocmd-events|</li>\n<li>group: (number|nil) the autocommand group id, if it exists</li>\n<li>match: (string) the expanded value of |&lt;amatch&gt;|</li>\n<li>buf: (number) the expanded value of |&lt;abuf&gt;|</li>\n<li>file: (string) the expanded value of |&lt;afile&gt;|</li>\n<li>data: (any) arbitrary data passed to |nvim_exec_autocmds()|</li>\n</ul>\n</li>\n</ul>\n<p>Example using callback:\nautoCmd = [\n{\nevent = [ &quot;BufEnter&quot; &quot;BufWinEnter&quot; ];\npattern = [ &quot;<em>.c&quot; &quot;</em>.h&quot; ];\ncallback = { __raw = &quot;function() print('This buffer enters') end&quot;; };\n}</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "autoCmd.*.callback"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;&quot;</code></p>",
    "description": "<p>Vim command to execute on event. Cannot be used with <code>callback</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "autoCmd.*.command"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>A textual description of this autocommand.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string",
    "name": "autoCmd.*.desc"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>DEPRECATED, please use <code>desc</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string",
    "name": "autoCmd.*.description"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>The event or events to register this autocommand.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or list of string",
    "name": "autoCmd.*.event"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>The autocommand group name or id to match against.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or signed integer",
    "name": "autoCmd.*.group"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Run nested autocommands.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "autoCmd.*.nested"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Run the autocommand only once.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "autoCmd.*.once"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Pattern or patterns to match literally against.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or list of string",
    "name": "autoCmd.*.pattern"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>augroup definitions</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">my_augroup</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">clear</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of (submodule)",
    "name": "autoGroups"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/autocmd.nix"
    ],
    "default": "<span class=\"variable\">true</span>\n",
    "description": "<p>Clear existing commands if the group already exists.</p>",
    "example": null,
    "read_only": false,
    "type": "boolean",
    "name": "autoGroups.<name>.clear"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/top-level/output.nix"
    ],
    "default": "<span class=\"variable\">config</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">build</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">packageUnchecked</span></span>\n",
    "description": "<p>Wrapped Neovim.</p>\n<blockquote>\n<p>[!NOTE]\nEvaluating this option will also check <code>assertions</code> and print any <code>warnings</code>.\nIf this is not desired, you can use <code>build.packageUnchecked</code> instead.</p>\n</blockquote>\n",
    "example": null,
    "read_only": true,
    "type": "package",
    "name": "build.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/top-level/output.nix"
    ],
    "default": null,
    "description": "<p>Wrapped Neovim (without checking warnings or assertions).</p>\n",
    "example": null,
    "read_only": true,
    "type": "package",
    "name": "build.packageUnchecked"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/top-level/test.nix"
    ],
    "default": null,
    "description": "<p>A derivation that tests the config by running neovim.</p>\n",
    "example": null,
    "read_only": true,
    "type": "package",
    "name": "build.test"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/clipboard.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Package(s) to use as the clipboard provider.\nLearn more at <code>:h clipboard</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "clipboard.providers"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/clipboard.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable wl-copy.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "clipboard.providers.wl-copy.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/clipboard.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">wl-clipboard</span></span>\n",
    "description": "<p>The wl-clipboard package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "clipboard.providers.wl-copy.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/clipboard.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable xclip.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "clipboard.providers.xclip.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/clipboard.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">xclip</span></span>\n",
    "description": "<p>The xclip package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "clipboard.providers.xclip.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/clipboard.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable xsel.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "clipboard.providers.xsel.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/clipboard.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">xsel</span></span>\n",
    "description": "<p>The xsel package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "clipboard.providers.xsel.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/clipboard.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets the register to use for the clipboard.\nLearn more in <a href=\"https://neovim.io/doc/user/options.html#'clipboard'\"><code>:h 'clipboard'</code></a>.</p>\n",
    "example": "<span class=\"string\">&quot;unnamedplus&quot;</span>\n",
    "read_only": false,
    "type": "null or string or list of (string or raw lua code) or raw lua code",
    "name": "clipboard.register"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/modules/colorscheme.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>The name of the colorscheme to use</p>",
    "example": null,
    "read_only": false,
    "type": "null or string",
    "name": "colorscheme"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load neovim-ayu when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.ayu.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable neovim-ayu.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.ayu.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for neovim-ayu.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.ayu.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for neovim-ayu</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.ayu.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.ayu.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.ayu.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.ayu.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.ayu.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.ayu.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">neovim-ayu</span></span>\n",
    "description": "<p>The neovim-ayu package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.ayu.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('ayu').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">callback</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">__raw</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&#39;&#39;</span>\n<span class=\"string\">      function()</span>\n<span class=\"string\">        print(&#39;nixvim&#39;)</span>\n<span class=\"string\">      end</span>\n<span class=\"string\">    &#39;&#39;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">foo_bar</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"number\">42</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">hostname</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;localhost:8080&quot;</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.ayu.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Set to <code>true</code> to use <code>mirage</code> variant instead of <code>dark</code> for dark background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.ayu.settings.mirage"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/ayu.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>A dictionary of group names, each associated with a dictionary of parameters\n(<code>bg</code>, <code>fg</code>, <code>sp</code> and <code>style</code>) and colors in hex.</p>\n<p>Alternatively, <code>overrides</code> can be a function that returns a dictionary of the same\nformat.\nYou can use the function to override based on a dynamic condition, such as the value of\n<code>background</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or lua code string or attribute set of (attribute set)",
    "name": "colorschemes.ayu.settings.overrides"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load base16-nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.base16.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>vim.env.BASE16_THEME</code> or <code>&quot;schemer-dark&quot;</code></p>",
    "description": "<p>The base16 colorscheme to use.</p>\n<p>You may use the name of a builtin colorscheme or an attrs that specifies the colors explicitly.</p>\n<p>Examples of builtin themes include:</p>\n<ul>\n<li>\n<p>&quot;catppuccin&quot;</p>\n</li>\n<li>\n<p>&quot;catppuccin-frappe&quot;</p>\n</li>\n<li>\n<p>&quot;catppuccin-latte&quot;</p>\n</li>\n<li>\n<p>&quot;catppuccin-macchiato&quot;</p>\n</li>\n<li>\n<p>&quot;catppuccin-mocha&quot;</p>\n</li>\n<li>\n<p>&quot;darcula&quot;</p>\n</li>\n<li>\n<p>&quot;dracula&quot;</p>\n</li>\n<li>\n<p>&quot;espresso&quot;</p>\n</li>\n<li>\n<p>&quot;github&quot;</p>\n</li>\n<li>\n<p>&quot;google-dark&quot;</p>\n</li>\n<li>\n<p>&quot;google-light&quot;</p>\n</li>\n<li>\n<p>&quot;gruvbox-dark-hard&quot;</p>\n</li>\n<li>\n<p>&quot;gruvbox-dark-medium&quot;</p>\n</li>\n<li>\n<p>&quot;gruvbox-dark-pale&quot;</p>\n</li>\n<li>\n<p>&quot;gruvbox-dark-soft&quot;</p>\n</li>\n<li>\n<p>&quot;gruvbox-light-hard&quot;</p>\n</li>\n<li>\n<p>&quot;gruvbox-light-medium&quot;</p>\n</li>\n<li>\n<p>&quot;gruvbox-light-soft&quot;</p>\n</li>\n<li>\n<p>&quot;material&quot;</p>\n</li>\n<li>\n<p>&quot;material-darker&quot;</p>\n</li>\n<li>\n<p>&quot;material-lighter&quot;</p>\n</li>\n<li>\n<p>&quot;material-palenight&quot;</p>\n</li>\n<li>\n<p>&quot;material-vivid&quot;</p>\n</li>\n<li>\n<p>&quot;nord&quot;</p>\n</li>\n<li>\n<p>&quot;nova&quot;</p>\n</li>\n<li>\n<p>&quot;ocean&quot;</p>\n</li>\n<li>\n<p>&quot;onedark&quot;</p>\n</li>\n<li>\n<p>&quot;rose-pine&quot;</p>\n</li>\n<li>\n<p>&quot;rose-pine-dawn&quot;</p>\n</li>\n<li>\n<p>&quot;rose-pine-moon&quot;</p>\n</li>\n<li>\n<p>&quot;solarized-dark&quot;</p>\n</li>\n<li>\n<p>&quot;solarized-light&quot;</p>\n</li>\n<li>\n<p>&quot;tango&quot;</p>\n</li>\n<li>\n<p>&quot;tokyo-night-dark&quot;</p>\n</li>\n<li>\n<p>&quot;tokyo-night-light&quot;</p>\n</li>\n<li>\n<p>&quot;tokyo-night-storm&quot;</p>\n</li>\n<li>\n<p>&quot;tokyo-night-terminal-dark&quot;</p>\n</li>\n<li>\n<p>&quot;tokyo-night-terminal-light&quot;</p>\n</li>\n<li>\n<p>&quot;tokyo-night-terminal-storm&quot;</p>\n</li>\n<li>\n<p>&quot;woodland&quot;</p>\n</li>\n</ul>\n<p><code>:h nvim-base16-builtin-colorschemes</code> includes a full list of builtin themes,\nhowever the <a href=\"https://github.com/RRethy/base16-nvim/blob/master/lua/colors/init.lua\">plugin's source code</a> may be more up to date.</p>\n<p>You can access <code>require('base16-colorscheme')</code> as <code>base16</code> in any raw lua,\nfor example, you could reuse some colors from the builtin colorschemes:</p>\n<pre><code class=\"language-nix\">  base03.__raw = &quot;base16.colorschemes['catppuccin'].base06&quot;;\n</code></pre>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">base00</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#16161D&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base01</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#2c313c&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base02</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#3e4451&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base03</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#6c7891&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base04</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#565c64&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base05</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#abb2bf&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base06</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#9a9bb3&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base07</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#c5c8e6&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base08</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#e06c75&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base09</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#d19a66&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base0A</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#e5c07b&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base0B</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#98c379&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base0C</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#56b6c2&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base0D</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#0184bc&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base0E</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#c678dd&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">base0F</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#a06949&quot;</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "null or string or (submodule) or raw lua code",
    "name": "colorschemes.base16.colorscheme"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable base16-nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.base16.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for base16-nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.base16.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for base16-nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.base16.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.base16.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.base16.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.base16.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.base16.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.base16.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">base16-nvim</span></span>\n",
    "description": "<p>The base16-nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.base16.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"variable\">true</span>\n",
    "description": "<p>Whether to set your status bar theme to 'base16'.</p>",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.base16.setUpBar"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('base16-colorscheme').with_config</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">dapui</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">indentblankline</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">telescope_borders</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.base16.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable cmp integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.cmp"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable dapui integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.dapui"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable illuminate integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.illuminate"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable indentblankline integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.indentblankline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable lsp_semantic integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.lsp_semantic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable mini_completion integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.mini_completion"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable notify integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.notify"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable telescope integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.telescope"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to display borders around telescope's panel.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.telescope_borders"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/base16/default.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable ts_rainbow integration.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.base16.settings.ts_rainbow"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load catppuccin-nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.catppuccin.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable catppuccin-nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.catppuccin.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for catppuccin-nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.catppuccin.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for catppuccin-nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.catppuccin.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.catppuccin.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.catppuccin.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.catppuccin.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.catppuccin.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.catppuccin.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">catppuccin-nvim</span></span>\n",
    "description": "<p>The catppuccin-nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.catppuccin.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('catppuccin').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">color_overrides</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">mocha</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">base</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#1e1e2f&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">disable_underline</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">flavour</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;mocha&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">integrations</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">cmp</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">gitsigns</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">mini</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">enabled</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">indentscope_color</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">notify</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">nvimtree</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">treesitter</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">styles</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">booleans</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n      <span class=\"string\">&quot;bold&quot;</span>\n      <span class=\"string\">&quot;italic&quot;</span>\n    <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">conditionals</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n      <span class=\"string\">&quot;bold&quot;</span>\n    <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">term_colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.catppuccin.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;latte&quot;</code></p>",
    "description": "<p>Background for <code>dark</code> background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"latte\", \"mocha\", \"frappe\", \"macchiato\" or raw lua code",
    "name": "colorschemes.catppuccin.settings.background.dark"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;latte&quot;</code></p>",
    "description": "<p>Background for <code>light</code> background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"latte\", \"mocha\", \"frappe\", \"macchiato\" or raw lua code",
    "name": "colorschemes.catppuccin.settings.background.light"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Override colors for all the flavours.</p>",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.color_overrides.all"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Override colors for the frappe flavour.</p>",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.color_overrides.frappe"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Override colors for the latte flavour.</p>",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.color_overrides.latte"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Override colors for the macchiato flavour.</p>",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.color_overrides.macchiato"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Override colors for the mocha flavour.</p>",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.color_overrides.mocha"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  __raw = &quot;vim.fn.stdpath 'cache' .. '/catppuccin'&quot;;\n}\n</code></pre>",
    "description": "<p>Set the compile cache directory.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.catppuccin.settings.compile_path"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Override specific highlight groups to use other groups or a hex color.\nYou can provide either a lua function or directly an attrs.</p>\n<p>Example:</p>\n<pre><code class=\"language-lua\">  function(colors)\n    return {\n      Comment = { fg = colors.flamingo },\n      [&quot;@constant.builtin&quot;] = { fg = colors.peach, style = {} },\n      [&quot;@comment&quot;] = { fg = colors.surface2, style = { &quot;italic&quot; } },\n    }\n  end\n</code></pre>\n<p>Default: <code>{}</code></p>\n",
    "example": null,
    "read_only": false,
    "type": "null or lua function string or attribute set of anything",
    "name": "colorschemes.catppuccin.settings.custom_highlights"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Some integrations are enabled by default, you can control this behaviour with this option.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.catppuccin.settings.default_integrations"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>If true, dims the background color of inactive window or buffer or split.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.catppuccin.settings.dim_inactive.enabled"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0.15</code></p>",
    "description": "<p>percentage of the shade to apply to the inactive window, split or buffer.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0.0 and 1.0 (both inclusive) or raw lua code",
    "name": "colorschemes.catppuccin.settings.dim_inactive.percentage"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;dark&quot;</code></p>",
    "description": "<p>Sets the shade to apply to the inactive split or window or buffer.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.catppuccin.settings.dim_inactive.shade"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Theme flavour.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"latte\", \"mocha\", \"frappe\", \"macchiato\", \"auto\"",
    "name": "colorschemes.catppuccin.settings.flavour"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Catppuccin provides theme support for other plugins in the Neovim ecosystem and extended\nNeovim functionality through <em>integrations</em>.</p>\n<p>To enable/disable an integration you just need to set it to <code>true</code>/<code>false</code>.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">  {\n    cmp = true;\n    gitsigns = true;\n    nvimtree = true;\n    treesitter = true;\n    notify = false;\n    mini = {\n      enabled = true;\n      indentscope_color = &quot;&quot;;\n    };\n  }\n</code></pre>\n<p>Default: see plugin source.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of anything)",
    "name": "colorschemes.catppuccin.settings.integrations"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Force no bold.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.catppuccin.settings.no_bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Force no italic.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.catppuccin.settings.no_italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Force no underline.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.catppuccin.settings.no_underline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Show the '~' characters after the end of buffers.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.catppuccin.settings.show_end_of_buffer"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define booleans highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.booleans"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">[\n  &quot;italic&quot;\n]\n</code></pre>",
    "description": "<p>Define comments highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.comments"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">[\n  &quot;italic&quot;\n]\n</code></pre>",
    "description": "<p>Define conditionals highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.conditionals"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define functions highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.functions"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define keywords highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.keywords"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define loops highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.loops"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define numbers highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.numbers"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define operators highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.operators"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define properties highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.properties"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define strings highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.strings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define types highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.types"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>[ ]</code></p>",
    "description": "<p>Define variables highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.catppuccin.settings.styles.variables"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Configure the colors used when opening a :terminal in Neovim.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.catppuccin.settings.term_colors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/catppuccin.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Enable Transparent background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.catppuccin.settings.transparent_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load cyberdream.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.cyberdream.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable cyberdream.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.cyberdream.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for cyberdream.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.cyberdream.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for cyberdream.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.cyberdream.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.cyberdream.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.cyberdream.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.cyberdream.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.cyberdream.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.cyberdream.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">cyberdream-nvim</span></span>\n",
    "description": "<p>The cyberdream.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.cyberdream.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('cyberdream').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">borderless_telescope</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">hide_fillchars</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">italic_comments</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">terminal_colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">theme</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">bg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#000000&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">green</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#00ff00&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">magenta</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#ff00ff&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">highlights</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">Comment</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n        <span class=\"property\"><span class=\"variable\">bg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;NONE&quot;</span><span class=\"punctuation-delimiter\">;</span>\n        <span class=\"property\"><span class=\"variable\">fg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#696969&quot;</span><span class=\"punctuation-delimiter\">;</span>\n        <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">transparent</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.cyberdream.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Modern borderless telescope theme.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.cyberdream.settings.borderless_telescope"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Replace all fillchars with ' ' for the ultimate clean look.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.cyberdream.settings.hide_fillchars"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Enable italics comments.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.cyberdream.settings.italic_comments"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Set terminal colors used in <code>:terminal</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.cyberdream.settings.terminal_colors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Override the default colors used.</p>\n<p>For a full list of colors, see upstream documentation.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.cyberdream.settings.theme.colors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Highlight groups to override, adding new groups is also possible.\nSee <code>:h highlight-groups</code> for a list of highlight groups.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">{\n  Comment = {\n    fg = &quot;#696969&quot;;\n    bg = &quot;NONE&quot;;\n    italic = true;\n  };\n}\n</code></pre>\n<p>Complete list can be found in <code>lua/cyberdream/theme.lua</code> in upstream repository.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((attribute set) or raw lua code)) or raw lua code",
    "name": "colorschemes.cyberdream.settings.theme.highlights"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/cyberdream.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Enable transparent background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.cyberdream.settings.transparent"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load dracula.nvim  when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.dracula-nvim.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable dracula.nvim .</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.dracula-nvim.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for dracula.nvim .</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.dracula-nvim.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for dracula.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.dracula-nvim.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.dracula-nvim.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.dracula-nvim.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.dracula-nvim.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.dracula-nvim.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.dracula-nvim.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">dracula-nvim</span></span>\n",
    "description": "<p>The dracula.nvim  package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.dracula-nvim.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula-nvim.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('dracula').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">green</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#00FF00&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">italic_comment</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.dracula-nvim.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<span class=\"variable\">true</span>\n",
    "description": "<p>Whether to automatically load dracula when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.dracula.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable dracula.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.dracula.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">dracula-vim</span></span>\n",
    "description": "<p>The dracula package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.dracula.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The configuration options for <strong>dracula</strong> without the <code>dracula_</code> prefix.</p>\n<p>For example, the following settings are equivialent to these <code>:setglobal</code> commands:</p>\n<ul>\n<li><code>foo_bar = 1</code> -&gt; <code>:setglobal dracula_foo_bar=1</code></li>\n<li><code>hello = &quot;world&quot;</code> -&gt; <code>:setglobal dracula_hello=&quot;world&quot;</code></li>\n<li><code>some_toggle = true</code> -&gt; <code>:setglobal dracula_some_toggle</code></li>\n<li><code>other_toggle = false</code> -&gt; <code>:setglobal nodracula_other_toggle</code></li>\n</ul>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">colorterm</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.dracula.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Include bold attributes in highlighting.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Include background fill colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.colorterm"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Explicitly declare full support for special attributes.\nOn terminal emulators, set to <code>true</code> to allow <code>underline</code>/<code>undercurl</code> highlights without\nchanging the foreground color.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.full_special_attrs_support"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Use high-contrast color when in diff mode.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.high_contrast_diff"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Include inverse attributes in highlighting.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.inverse"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Include italic attributes in highlighting.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Include strikethrough attributes in highlighting.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.strikethrough"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Include undercurl attributes in highlighting (only if <code>underline</code> is enabled).</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.undercurl"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/dracula.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Include underline attributes in highlighting.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.dracula.settings.underline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<span class=\"variable\">true</span>\n",
    "description": "<p>Whether to automatically load everforest when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.everforest.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable everforest.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.everforest.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">everforest</span></span>\n",
    "description": "<p>The everforest package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.everforest.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The configuration options for <strong>everforest</strong> without the <code>everforest_</code> prefix.</p>\n<p>For example, the following settings are equivialent to these <code>:setglobal</code> commands:</p>\n<ul>\n<li><code>foo_bar = 1</code> -&gt; <code>:setglobal everforest_foo_bar=1</code></li>\n<li><code>hello = &quot;world&quot;</code> -&gt; <code>:setglobal everforest_hello=&quot;world&quot;</code></li>\n<li><code>some_toggle = true</code> -&gt; <code>:setglobal everforest_some_toggle</code></li>\n<li><code>other_toggle = false</code> -&gt; <code>:setglobal noeverforest_other_toggle</code></li>\n</ul>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">background</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;hard&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">colors_override</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">bg0</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n      <span class=\"string\">&quot;#202020&quot;</span>\n      <span class=\"string\">&quot;234&quot;</span>\n    <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">bg2</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n      <span class=\"string\">&quot;#282828&quot;</span>\n      <span class=\"string\">&quot;235&quot;</span>\n    <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">dim_inactive_windows</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"number\">1</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.everforest.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;medium&quot;</code></p>",
    "description": "<p>The background contrast used in this color scheme.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"hard\", \"medium\", \"soft\" or raw lua code",
    "name": "colorschemes.everforest.settings.background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Override color palette. The available keys can be found in the plugin's <a href=\"https://github.com/sainnhe/everforest/blob/master/autoload/everforest.vim\">source code</a></p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((list of string) or raw lua code)) or raw lua code",
    "name": "colorschemes.everforest.settings.colors_override"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;grey background&quot;</code></p>",
    "description": "<p>Some plugins can highlight the word under current cursor, you can use this\noption to control their behavior.</p>\n<p>Default value:      <code>'grey background'</code> when not in transparent mode, <code>'bold'</code>\nwhen in transparent mode.</p>\n<p>Currently, the following plugins are supported:</p>\n<ul>\n<li><a href=\"https://github.com/neoclide/coc-highlight\">coc-highlight</a></li>\n<li><a href=\"https://github.com/dominikduda/vim_current_word\">vim_current_word</a></li>\n<li><a href=\"https://github.com/RRethy/vim-illuminate\">vim-illuminate</a></li>\n<li><a href=\"https://github.com/itchyny/vim-cursorword\">vim-cursorword</a></li>\n<li><a href=\"https://github.com/prabirshrestha/vim-lsp\">vim-lsp</a></li>\n</ul>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"grey background\", \"bold\", \"underline\", \"italic\" or raw lua code",
    "name": "colorschemes.everforest.settings.current_word"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;auto&quot;</code></p>",
    "description": "<p>Customize the cursor color, only works in GUI clients.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"auto\", \"red\", \"orange\", \"yellow\", \"green\", \"aqua\", \"blue\", \"purple\" or raw lua code",
    "name": "colorschemes.everforest.settings.cursor"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>Some plugins support highlighting error/warning/info/hint lines, but this\nfeature is disabled by default in this color scheme. To enable this feature,\nset this option to <code>1</code>.</p>\n<p>Currently, the following plugins are supported:</p>\n<ul>\n<li><a href=\"https://github.com/neoclide/coc.nvim\">coc.nvim</a></li>\n<li><a href=\"https://github.com/ycm-core/YouCompleteMe\">YouCompleteMe</a></li>\n<li><a href=\"https://github.com/dense-analysis/ale\">ale</a></li>\n<li><a href=\"https://github.com/vim-syntastic/syntastic\">syntastic</a></li>\n</ul>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.everforest.settings.diagnostic_line_highlight"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>Some plugins support highlighting error/warning/info/hint texts, by default\nthese texts are only underlined, but you can use this option to also highlight\nthe background of them.</p>\n<p>Currently, the following plugins are supported:</p>\n<ul>\n<li>neovim's built-in language server client</li>\n<li><a href=\"https://github.com/neoclide/coc.nvim\">coc.nvim</a></li>\n<li><a href=\"https://github.com/prabirshrestha/vim-lsp\">vim-lsp</a></li>\n<li><a href=\"https://github.com/ycm-core/YouCompleteMe\">YouCompleteMe</a></li>\n<li><a href=\"https://github.com/dense-analysis/ale\">ale</a></li>\n<li><a href=\"https://github.com/neomake/neomake\">neomake</a></li>\n<li><a href=\"https://github.com/vim-syntastic/syntastic\">syntastic</a></li>\n</ul>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.everforest.settings.diagnostic_text_highlight"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;grey&quot;</code></p>",
    "description": "<p>Some plugins can use the virtual text feature of Neovim to display\nerror/warning/info/hint information. You can use this option to adjust the\nway these virtual texts are highlighted.</p>\n<p>Currently, the following plugins are supported:</p>\n<ul>\n<li>Neovim's built-in language server client</li>\n<li><a href=\"https://github.com/neoclide/coc.nvim\">coc.nvim</a></li>\n<li><a href=\"https://github.com/prabirshrestha/vim-lsp\">vim-lsp</a></li>\n<li><a href=\"https://github.com/dense-analysis/ale\">ale</a></li>\n<li><a href=\"https://github.com/neomake/neomake\">neomake</a></li>\n<li><a href=\"https://github.com/ycm-core/YouCompleteMe\">YouCompleteMe</a></li>\n</ul>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"grey\", \"colored\", \"highlighted\" or raw lua code",
    "name": "colorschemes.everforest.settings.diagnostic_virtual_text"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>Dim inactive windows. Only works in Neovim currently.</p>\n<p>When this option is used in conjunction with |g:everforest_show_eob| set to 0,\nthe end of the buffer will only be hidden inside the active window. Inside\ninactive windows, the end of buffer filler characters will be visible in\ndimmed symbols. This is due to the way Vim and Neovim handle |hl-EndOfBuffer|.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.everforest.settings.dim_inactive_windows"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>By default, italic is enabled in <code>Comment</code>. To disable italic in <code>Comment</code>, set this option to <code>1</code></p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.everforest.settings.disable_italic_comment"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>Setting this option to <code>1</code> will disable terminal colors provided by this color\nscheme so you can remain terminal colors the same when using |:terminal| in\nvim and outside of vim.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.everforest.settings.disable_terminal_colors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>To enable italic in this color scheme, set this option to <code>1</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.everforest.settings.enable_italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;bright&quot;</code></p>",
    "description": "<p>Style used to make floating windows stand out from other windows. <code>'bright'</code>\nmakes the background of these windows lighter than |hl-Normal|, whereas\n<code>'dim'</code> makes it darker.</p>\n<p>Floating windows include for instance diagnostic pop-ups, scrollable\ndocumentation windows from completion engines, overlay windows from\ninstallers, etc.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"bright\", \"dim\" or raw lua code",
    "name": "colorschemes.everforest.settings.float_style"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;none&quot;</code></p>",
    "description": "<p>Inlay hints are special markers that are displayed inline with the code to\nprovide you with additional information. You can use this option to customize\nthe background color of inlay hints.</p>\n<p>Currently, the following LSP clients are supported:</p>\n<ul>\n<li>Neovim's built-in language server client</li>\n<li><a href=\"https://github.com/neoclide/coc.nvim\">coc.nvim</a></li>\n<li><a href=\"https://github.com/prabirshrestha/vim-lsp\">vim-lsp</a></li>\n<li><a href=\"https://github.com/ycm-core/YouCompleteMe\">YouCompleteMe</a></li>\n</ul>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"none\", \"dimmed\" or raw lua code",
    "name": "colorschemes.everforest.settings.inlay_hints_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>By default, bold is enabled in lightline color scheme. To disable bold in\nlightline color scheme, set this option to <code>1</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.everforest.settings.lightline_disable_bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>1</code></p>",
    "description": "<p>Whether to show |hl-EndOfBuffer|.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.everforest.settings.show_eob"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;none&quot;</code></p>",
    "description": "<p>By default, the color of sign column background is the same as normal text\nbackground, but you can use a grey background by setting this option to <code>'grey'</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"none\", \"grey\" or raw lua code",
    "name": "colorschemes.everforest.settings.sign_column_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;none&quot;</code></p>",
    "description": "<p>By default, this color scheme won't color the foreground of |spell|, instead\ncolored under curls will be used. If you also want to color the foreground,\nset this option to <code>'colored'</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"none\", \"colored\" or raw lua code",
    "name": "colorschemes.everforest.settings.spell_foreground"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>To use transparent background, set this option to <code>1</code>.</p>\n<p>If you want more ui components to be transparent (for example, status line\nbackground), set this option to <code>2</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of 0, 1, 2 or raw lua code",
    "name": "colorschemes.everforest.settings.transparent_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/everforest.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;low&quot;</code></p>",
    "description": "<p>The contrast of line numbers, indent lines, etc.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"low\", \"high\" or raw lua code",
    "name": "colorschemes.everforest.settings.ui_contrast"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load github-nvim-theme when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.github-theme.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable github-nvim-theme.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.github-theme.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for github-nvim-theme.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.github-theme.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for github-nvim-theme</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.github-theme.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.github-theme.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.github-theme.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.github-theme.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.github-theme.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.github-theme.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">github-nvim-theme</span></span>\n",
    "description": "<p>The github-nvim-theme package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.github-theme.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/github-theme.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('github-theme').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">options</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">dim_inactive</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">styles</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">comments</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;italic&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">keywords</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;bold&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">transparent</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.github-theme.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load gruvbox.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.gruvbox.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable gruvbox.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.gruvbox.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for gruvbox.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.gruvbox.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for gruvbox.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.gruvbox.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.gruvbox.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.gruvbox.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.gruvbox.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.gruvbox.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.gruvbox.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">gruvbox-nvim</span></span>\n",
    "description": "<p>The gruvbox.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.gruvbox.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/gruvbox.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('gruvbox').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">palette_overrides</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">bright_blue</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#5476b2&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">bright_purple</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#fb4934&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">dark1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#323232&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">dark2</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#383330&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">dark3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#323232&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">terminal_colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.gruvbox.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load kanagawa.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.kanagawa.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable kanagawa.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.kanagawa.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for kanagawa.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.kanagawa.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for kanagawa.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.kanagawa.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.kanagawa.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.kanagawa.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.kanagawa.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.kanagawa.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.kanagawa.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">kanagawa-nvim</span></span>\n",
    "description": "<p>The kanagawa.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.kanagawa.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('kanagawa').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">palette</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">fujiWhite</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#FFFFFF&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">sumiInk0</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#000000&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">theme</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">all</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n        <span class=\"property\"><span class=\"variable\">ui</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n          <span class=\"property\"><span class=\"variable\">bg_gutter</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation-delimiter\">;</span>\n        <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">dragon</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n        <span class=\"property\"><span class=\"variable\">syn</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n          <span class=\"property\"><span class=\"variable\">parameter</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;yellow&quot;</span><span class=\"punctuation-delimiter\">;</span>\n        <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">wave</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n        <span class=\"property\"><span class=\"variable\">ui</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n          <span class=\"property\"><span class=\"variable\">float</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n            <span class=\"property\"><span class=\"variable\">bg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;none&quot;</span><span class=\"punctuation-delimiter\">;</span>\n          <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n        <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">commentStyle</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">compile</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">dimInactive</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">functionStyle</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">overrides</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;function(colors) return {} end&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">terminalColors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">theme</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;wave&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">transparent</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">undercurl</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.kanagawa.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;wave&quot;</code></p>",
    "description": "<p>The theme to use when <code>vim.o.background = &quot;dark&quot;</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.kanagawa.settings.background.dark"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;lotus&quot;</code></p>",
    "description": "<p>The theme to use when <code>vim.o.background = &quot;light&quot;</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.kanagawa.settings.background.light"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Change all usages of these colors.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">  {\n    sumiInk0 = &quot;#000000&quot;;\n    fujiWhite = &quot;#FFFFFF&quot;;\n  }\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.kanagawa.settings.colors.palette"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  all = { };\n  dragon = { };\n  lotus = { };\n  wave = { };\n}\n</code></pre>",
    "description": "<p>Change specific usages for a certain theme, or for all of them</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">  {\n    wave = {\n      ui = {\n          float = {\n              bg = &quot;none&quot;;\n          };\n      };\n    };\n    dragon = {\n        syn = {\n            parameter = &quot;yellow&quot;;\n        };\n    };\n    all = {\n        ui = {\n            bg_gutter = &quot;none&quot;;\n        };\n    };\n  }\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((attribute set) or raw lua code)) or raw lua code",
    "name": "colorschemes.kanagawa.settings.colors.theme"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  italic = true;\n}\n</code></pre>",
    "description": "<p>Highlight options for comments.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (anything or raw lua code)) or raw lua code",
    "name": "colorschemes.kanagawa.settings.commentStyle"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Enable compiling the colorscheme.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.kanagawa.settings.compile"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether dim inactive window <code>:h hl-NormalNC</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.kanagawa.settings.dimInactive"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Highlight options for functions.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (anything or raw lua code)) or raw lua code",
    "name": "colorschemes.kanagawa.settings.functionStyle"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  italic = true;\n}\n</code></pre>",
    "description": "<p>Highlight options for keywords.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (anything or raw lua code)) or raw lua code",
    "name": "colorschemes.kanagawa.settings.keywordStyle"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">''\n  function(colors)\n    return {}\n  end\n''\n</code></pre>",
    "description": "<p>The body of a function that add/modify hihlights.\nIt takes as input a <code>colors</code> argument which is a table of this form:</p>\n<pre><code>  colors = {\n    palette = {\n      foo = &quot;#RRGGBB&quot;,\n      bar = &quot;#RRGGBB&quot;\n    },\n    theme = {\n      foo = &quot;#RRGGBB&quot;,\n      bar = &quot;#RRGGBB&quot;\n    }\n  }\n</code></pre>\n<p>It should return a table of highlights.</p>\n<pre><code>  function(colors)\n    CONTENT_OF_OVERRIDE_OPTION\n  end\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or lua function string",
    "name": "colorschemes.kanagawa.settings.overrides"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  bold = true;\n}\n</code></pre>",
    "description": "<p>Highlight options for statements.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (anything or raw lua code)) or raw lua code",
    "name": "colorschemes.kanagawa.settings.statementStyle"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>If true, defines <code>vim.g.terminal_color_{0,17}</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.kanagawa.settings.terminalColors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;wave&quot;</code></p>",
    "description": "<p>The theme to load when background is not set.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.kanagawa.settings.theme"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to set a background color.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.kanagawa.settings.transparent"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Highlight options for types.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (anything or raw lua code)) or raw lua code",
    "name": "colorschemes.kanagawa.settings.typeStyle"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/kanagawa.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Enable undercurls.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.kanagawa.settings.undercurl"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/melange.nix"
    ],
    "default": "<span class=\"variable\">true</span>\n",
    "description": "<p>Whether to automatically load melange-nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.melange.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/melange.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable melange-nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.melange.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/melange.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">melange-nvim</span></span>\n",
    "description": "<p>The melange-nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.melange.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load modus-themes.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.modus.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable modus-themes.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.modus.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for modus-themes.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.modus.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for modus-themes.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.modus.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.modus.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.modus.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.modus.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.modus.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.modus.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">modus-themes-nvim</span></span>\n",
    "description": "<p>The modus-themes.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.modus.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('modus-themes').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">dim_inactive</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">hide_inactive_statusline</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">on_colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;function(colors) end&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">on_highlights</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;function(highlights, colors) end&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">style</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;auto&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">styles</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">comments</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">functions</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">keywords</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">variables</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">transparent</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">variant</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;default&quot;</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.modus.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Dims inactive windows.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.modus.settings.dim_inactive"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Hide statuslines in inactive windows.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.modus.settings.hide_inactive_statusline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;function(colors) end&quot;</code></p>",
    "description": "<p>Override specific color groups to use other groups or a hex color.\nFunction will be called with a <code>ColorScheme</code> table.</p>\n<pre><code>@param colors ColorScheme\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or lua function string",
    "name": "colorschemes.modus.settings.on_colors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;function(highlights, colors) end&quot;</code></p>",
    "description": "<p>Override specific highlights to use other groups or a hex color.\nFunction will be called with a <code>Highlights</code> and <code>ColorScheme</code> table.</p>\n<pre><code>@param highlights Highlights\n@param colors ColorScheme\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or lua function string",
    "name": "colorschemes.modus.settings.on_highlights"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;modus_operandi&quot;</code></p>",
    "description": "<p>The theme comes in a light <code>modus_operandi</code> style and a dark <code>modus_vivendi</code> style.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"modus_operandi\", \"modus_vivendi\" or raw lua code",
    "name": "colorschemes.modus.settings.style"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  italic = true;\n}\n</code></pre>",
    "description": "<p>Define comments highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set)",
    "name": "colorschemes.modus.settings.styles.comments"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the background (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.comments.bg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Integer between 0 and 100.</p>",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0 and 100 (both inclusive)",
    "name": "colorschemes.modus.settings.styles.comments.blend"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>cterm attribute map, like |highlight-args|.\nIf not set, cterm attributes will match those from the attribute map documented above.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or (attribute set)",
    "name": "colorschemes.modus.settings.styles.comments.cterm"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets background of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.comments.ctermbg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets foreground of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.comments.ctermfg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Don't override existing definition.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.default"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the foreground (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.comments.fg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Name of another highlight group to link to.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.comments.link"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.nocombine"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.reverse"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Special color (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.comments.sp"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.standout"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.strikethrough"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.undercurl"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.underdashed"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.underdotted"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.underdouble"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.comments.underline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Define functions highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set)",
    "name": "colorschemes.modus.settings.styles.functions"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the background (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.functions.bg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Integer between 0 and 100.</p>",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0 and 100 (both inclusive)",
    "name": "colorschemes.modus.settings.styles.functions.blend"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>cterm attribute map, like |highlight-args|.\nIf not set, cterm attributes will match those from the attribute map documented above.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or (attribute set)",
    "name": "colorschemes.modus.settings.styles.functions.cterm"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets background of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.functions.ctermbg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets foreground of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.functions.ctermfg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Don't override existing definition.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.default"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the foreground (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.functions.fg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Name of another highlight group to link to.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.functions.link"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.nocombine"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.reverse"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Special color (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.functions.sp"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.standout"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.strikethrough"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.undercurl"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.underdashed"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.underdotted"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.underdouble"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.functions.underline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  italic = true;\n}\n</code></pre>",
    "description": "<p>Define keywords highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set)",
    "name": "colorschemes.modus.settings.styles.keywords"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the background (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.keywords.bg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Integer between 0 and 100.</p>",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0 and 100 (both inclusive)",
    "name": "colorschemes.modus.settings.styles.keywords.blend"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>cterm attribute map, like |highlight-args|.\nIf not set, cterm attributes will match those from the attribute map documented above.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or (attribute set)",
    "name": "colorschemes.modus.settings.styles.keywords.cterm"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets background of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.keywords.ctermbg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets foreground of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.keywords.ctermfg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Don't override existing definition.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.default"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the foreground (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.keywords.fg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Name of another highlight group to link to.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.keywords.link"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.nocombine"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.reverse"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Special color (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.keywords.sp"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.standout"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.strikethrough"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.undercurl"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.underdashed"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.underdotted"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.underdouble"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.keywords.underline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Define variables highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set)",
    "name": "colorschemes.modus.settings.styles.variables"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the background (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.variables.bg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Integer between 0 and 100.</p>",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0 and 100 (both inclusive)",
    "name": "colorschemes.modus.settings.styles.variables.blend"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>cterm attribute map, like |highlight-args|.\nIf not set, cterm attributes will match those from the attribute map documented above.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or (attribute set)",
    "name": "colorschemes.modus.settings.styles.variables.cterm"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets background of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.variables.ctermbg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets foreground of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.variables.ctermfg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Don't override existing definition.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.default"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the foreground (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.variables.fg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Name of another highlight group to link to.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.variables.link"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.nocombine"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.reverse"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Special color (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.modus.settings.styles.variables.sp"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.standout"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.strikethrough"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.undercurl"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.underdashed"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.underdotted"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.underdouble"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.modus.settings.styles.variables.underline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Disable setting the background color.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.modus.settings.transparent"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/modus.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;default&quot;</code></p>",
    "description": "<p>Styles come in four variants:</p>\n<ul>\n<li><code>default</code> is the plugin's main style designed to cover a broad range of needs.</li>\n<li><code>tinted</code> tones down intensity and provides more color variety.</li>\n<li><code>deuteranopia</code> is optimized for users with red-green color deficiency.</li>\n<li><code>tritanopia</code> is optimized for users with blue-yellow color deficiency.</li>\n</ul>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"default\", \"tinted\", \"deuteranopia\", \"tritanopia\" or raw lua code",
    "name": "colorschemes.modus.settings.variant"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load monokai-pro.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.monokai-pro.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable monokai-pro.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.monokai-pro.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for monokai-pro.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.monokai-pro.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for monokai-pro.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.monokai-pro.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.monokai-pro.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.monokai-pro.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.monokai-pro.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.monokai-pro.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.monokai-pro.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">monokai-pro-nvim</span></span>\n",
    "description": "<p>The monokai-pro.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.monokai-pro.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('monokai-pro').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">devicons</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">filter</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;ristretto&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">terminal_colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.monokai-pro.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">[\n  &quot;toggleterm&quot;\n  &quot;telescope&quot;\n  &quot;renamer&quot;\n  &quot;notify&quot;\n]\n</code></pre>",
    "description": "<p>List of plugins for which the background should be clear.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.monokai-pro.settings.background_clear"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;pro&quot;</code></p>",
    "description": "<p>Which day filter to use.</p>\n",
    "example": "<span class=\"string\">&quot;classic&quot;</span>\n",
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.monokai-pro.settings.day_night.day_filter"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to enable day/night mode.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.monokai-pro.settings.day_night.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;spectrum&quot;</code></p>",
    "description": "<p>Which night filter to use.</p>\n",
    "example": "<span class=\"string\">&quot;octagon&quot;</span>\n",
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.monokai-pro.settings.day_night.night_filter"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to use devicons characters.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.monokai-pro.settings.devicons"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>lib.nixvim.mkRaw &quot;vim.o.background == 'light' and 'classic' or 'pro'&quot;</code></p>",
    "description": "<p>Which filter to use.</p>\n",
    "example": "<span class=\"string\">&quot;ristretto&quot;</span>\n",
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.monokai-pro.settings.filter"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;background&quot;</code></p>",
    "description": "<p>Incremental search look.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"underline\", \"background\" or raw lua code",
    "name": "colorschemes.monokai-pro.settings.inc_search"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  bufferline = {\n    bold = true;\n    underline_fill = false;\n    underline_selected = false;\n    underline_visible = false;\n  };\n  indent_blankline = {\n    context_highlight = &quot;default&quot;;\n    context_start_underline = false;\n  };\n}\n</code></pre>",
    "description": "<p>Override configuration for specific plugins.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((attribute set of anything) or raw lua code)) or raw lua code",
    "name": "colorschemes.monokai-pro.settings.plugins"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  annotation = {\n    italic = true;\n  };\n  comment = {\n    italic = true;\n  };\n  keyword = {\n    italic = true;\n  };\n  parameter = {\n    italic = true;\n  };\n  storageclass = {\n    italic = true;\n  };\n  structure = {\n    italic = true;\n  };\n  tag_attribute = {\n    italic = true;\n  };\n  type = {\n    italic = true;\n  };\n}\n</code></pre>",
    "description": "<p>Set the style for specific elements.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((attribute set of anything) or raw lua code)) or raw lua code",
    "name": "colorschemes.monokai-pro.settings.styles"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to use terminal colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.monokai-pro.settings.terminal_colors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/monokai-pro.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to enable transparent background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.monokai-pro.settings.transparent_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load nightfox.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.nightfox.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable nightfox.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.nightfox.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"string\">&quot;nightfox&quot;</span>\n",
    "description": "<p>Which palette/flavor to use as the colorscheme.</p>",
    "example": "<span class=\"string\">&quot;dayfox&quot;</span>\n",
    "read_only": false,
    "type": "one of \"carbonfox\", \"dawnfox\", \"dayfox\", \"duskfox\", \"nightfox\", \"nordfox\", \"terafox\"",
    "name": "colorschemes.nightfox.flavor"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for nightfox.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.nightfox.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for nightfox.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.nightfox.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.nightfox.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.nightfox.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.nightfox.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.nightfox.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.nightfox.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">nightfox-nvim</span></span>\n",
    "description": "<p>The nightfox.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.nightfox.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('nightfox').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">groups</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">all</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">NormalNC</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n        <span class=\"property\"><span class=\"variable\">bg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;inactive&quot;</span><span class=\"punctuation-delimiter\">;</span>\n        <span class=\"property\"><span class=\"variable\">fg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;fg1&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">options</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">colorblind</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">enable</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">severity</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n        <span class=\"property\"><span class=\"variable\">deutan</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"number\">0.6</span><span class=\"punctuation-delimiter\">;</span>\n        <span class=\"property\"><span class=\"variable\">protan</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"number\">0.3</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">inverse</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">match_paren</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">search</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">visual</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">modules</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">coc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n        <span class=\"property\"><span class=\"variable\">background</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">diagnostic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n        <span class=\"property\"><span class=\"variable\">background</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n        <span class=\"property\"><span class=\"variable\">enable</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">styles</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">comments</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;italic&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">functions</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;italic,bold&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">terminal_colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">transparent</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">palettes</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">duskfox</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">bg0</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#1d1d2b&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">bg1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#000000&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">bg3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#121820&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">sel0</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#131b24&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">specs</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">all</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">inactive</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;bg0&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">duskfox</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">inactive</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#090909&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.nightfox.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Groups are the highlight group definitions.\nThe keys of this table are the name of the highlight groups that will be overridden.\nThe value is a table with the following values:</p>\n<ul>\n<li>fg, bg, style, sp, link,</li>\n</ul>\n<p>Just like <code>spec</code> groups support templates.\nThis time the template is based on a spec object.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">  {\n    all = {\n      Whitespace.link = &quot;Comment&quot;;\n      IncSearch.bg = &quot;palette.cyan&quot;;\n    },\n    nightfox.PmenuSel = {\n      bg = &quot;#73daca&quot;;\n      fg = &quot;bg0&quot;;\n    };\n  }\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of attribute set of attribute set of string)",
    "name": "colorschemes.nightfox.settings.groups"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to enable nightfox’s <em>color vision deficiency</em> (cdv) mode.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nightfox.settings.options.colorblind.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>Severity [0, 1] for deutan (green).</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0.0 and 1.0 (both inclusive) or raw lua code",
    "name": "colorschemes.nightfox.settings.options.colorblind.severity.deutan"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>Severity [0, 1] for protan (red).</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0.0 and 1.0 (both inclusive) or raw lua code",
    "name": "colorschemes.nightfox.settings.options.colorblind.severity.protan"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>Severity [0, 1] for tritan (blue).</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0.0 and 1.0 (both inclusive) or raw lua code",
    "name": "colorschemes.nightfox.settings.options.colorblind.severity.tritan"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Only show simulated colorblind colors and not diff shifted.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nightfox.settings.options.colorblind.simulate_only"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;_compiled&quot;</code></p>",
    "description": "<p>The string appended to the compiled file.\nEach <code>style</code> outputs to its own file.\nThese files will append the suffix to the end of the file.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.nightfox.settings.options.compile_file_suffix"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  __raw = &quot;vim.fn.stdpath('cache') .. '/nightfox'&quot;;\n}\n</code></pre>",
    "description": "<p>The output directory path where the compiled results will be written to.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.nightfox.settings.options.compile_path"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>A boolean value that if set will set the background of Non current windows to be darker.\nSee <code>:h hl-NormalNC</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nightfox.settings.options.dim_inactive"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  match_paren = false;\n  search = false;\n  visual = false;\n}\n</code></pre>",
    "description": "<p>A table that contains a list of highlight types.\nIf a highlight type is enabled it will inverse the foreground and background colors\ninstead of applying the normal highlight group.\nThees highlight types are: <code>match_paren</code>, <code>visual</code>, <code>search</code>.</p>\n<p>For an example if search is enabled instead of highlighting a search term with the default\nsearch color it will inverse the foureground and background colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (boolean or raw lua code)) or raw lua code",
    "name": "colorschemes.nightfox.settings.options.inverse"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>The default value of a module that has not been overridden in the modules table.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nightfox.settings.options.module_default"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  coc = {\n    background = true;\n  };\n  diagnostic = {\n    background = true;\n    enable = true;\n  };\n  leap = {\n    background = true;\n  };\n  lsp_semantic_tokens = true;\n  native_lsp = {\n    background = true;\n    enable = true;\n  };\n  treesitter = true;\n}\n</code></pre>",
    "description": "<p><code>modules</code> store configuration information for various plugins and other neovim modules.\nA module can either be a boolean or a table that contains additional configuration for\nthat module.\nIf the value is a table it also has a field called <code>enable</code> that will tell nightfox to\nload it.\nSee <code>|nightfox-modules|</code> for more information.</p>\n<p>By default modules will be enabled.\nTo change this behaviour change <code>options.module_default</code> to <code>false</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (anything or raw lua code)) or raw lua code",
    "name": "colorschemes.nightfox.settings.options.modules"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  comments = &quot;NONE&quot;;\n  conditionals = &quot;NONE&quot;;\n  constants = &quot;NONE&quot;;\n  functions = &quot;NONE&quot;;\n  keywords = &quot;NONE&quot;;\n  numbers = &quot;NONE&quot;;\n  operators = &quot;NONE&quot;;\n  preprocs = &quot;NONE&quot;;\n  strings = &quot;NONE&quot;;\n  types = &quot;NONE&quot;;\n  variables = &quot;NONE&quot;;\n}\n</code></pre>",
    "description": "<p>A table that contains a list of syntax components and their corresponding style.\nThese styles can be any combination of <code>|highlight-args|</code>.</p>\n<p>The list of syntax components are:</p>\n<ul>\n<li>comments</li>\n<li>conditionals</li>\n<li>constants</li>\n<li>functions</li>\n<li>keywords</li>\n<li>numbers</li>\n<li>operators</li>\n<li>preprocs</li>\n<li>strings</li>\n<li>types</li>\n<li>variables</li>\n</ul>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">comments</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;italic&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">functions</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;italic,bold&quot;</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.nightfox.settings.options.styles"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>A boolean value that if set will define the terminal colors for the builtin <code>terminal</code>\n(<code>vim.g.terminal_color_*</code>).</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nightfox.settings.options.terminal_colors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>A boolean value that if set will disable setting the background of <code>Normal</code>, <code>NormalNC</code> and\nother highlight groups.\nThis lets you use the colors of the colorscheme but use the background of your terminal.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nightfox.settings.options.transparent"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>A <code>palette</code> is the base color definitions of a style.\nEach style defines its own palette to be used by the other components.\nA palette defines base colors, as well as foreground and background shades.\nAlong with the foreground and background colors a palette also defines other colors such\nas selection and comment colors.</p>\n<p>The base colors are |nightfox-shade| objects that define a <code>base</code>, <code>bright</code>, and <code>dim</code>\ncolor.\nThese base colors are: <code>black</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>blue</code>, <code>magenta</code>, <code>cyan</code>,\n<code>white</code>, <code>orange</code>, <code>pink</code>.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">  {\n    all = {\n      red = &quot;#ff0000&quot;;\n    };\n    nightfox = {\n      red = &quot;#c94f6d&quot;;\n    };\n    dayfox = {\n      blue = {\n        base = &quot;#4d688e&quot;;\n        bright = &quot;#4e75aa&quot;;\n        dim = &quot;#485e7d&quot;;\n      };\n    };\n    nordfox = {\n      bg1 = &quot;#2e3440&quot;;\n      sel0 = &quot;#3e4a5b&quot;;\n      sel1 = &quot;#4f6074&quot;;\n      comment = &quot;#60728a&quot;;\n    };\n  }\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of attribute set of (string or attribute set of string))",
    "name": "colorschemes.nightfox.settings.palettes"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nightfox.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Spec's (specifications) are a mapping of palettes to logical groups that will be used by\nthe groups.\nSome examples of the groups that specs map would be:</p>\n<ul>\n<li>syntax groups (functions, types, keywords, ...)</li>\n<li>diagnostic groups (error, warning, info, hints)</li>\n<li>git groups (add, removed, changed)</li>\n</ul>\n<p>You can override these just like palettes.</p>\n<p>Example:</p>\n<pre><code class=\"language-nix\">  {\n    all = {\n      syntax = {\n        keyword = &quot;magenta&quot;;\n        conditional = &quot;magenta.bright&quot;;\n        number = &quot;orange.dim&quot;;\n      };\n      git = {\n        changed = &quot;#f4a261&quot;;\n      };\n    };\n    nightfox = {\n      syntax = {\n        operator = &quot;orange&quot;;\n      };\n    };\n  }\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of attribute set of (string or attribute set of string))",
    "name": "colorschemes.nightfox.settings.specs"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<span class=\"variable\">true</span>\n",
    "description": "<p>Whether to automatically load nord.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.nord.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable nord.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.nord.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">nord-nvim</span></span>\n",
    "description": "<p>The nord.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.nord.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The configuration options for <strong>nord</strong> without the <code>nord_</code> prefix.</p>\n<p>For example, the following settings are equivialent to these <code>:setglobal</code> commands:</p>\n<ul>\n<li><code>foo_bar = 1</code> -&gt; <code>:setglobal nord_foo_bar=1</code></li>\n<li><code>hello = &quot;world&quot;</code> -&gt; <code>:setglobal nord_hello=&quot;world&quot;</code></li>\n<li><code>some_toggle = true</code> -&gt; <code>:setglobal nord_some_toggle</code></li>\n<li><code>other_toggle = false</code> -&gt; <code>:setglobal nonord_other_toggle</code></li>\n</ul>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">borders</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">disable_background</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.nord.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Enable the border between vertically split windows.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nord.settings.borders"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Make sidebars and popup menus like nvim-tree and telescope have a different background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nord.settings.contrast"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Set the cursorline transparent/visible.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nord.settings.cursorline_transparent"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Disable the setting of background color so that NeoVim can use your terminal background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nord.settings.disable_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Re-enables the background of the sidebar if you disabled the background of everything.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nord.settings.enable_sidebar_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Enables/disables italics.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nord.settings.italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/nord.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Enables/disables colorful backgrounds when used in <em>diff</em> mode.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.nord.settings.uniform_diff_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/one.nix"
    ],
    "default": "<span class=\"variable\">true</span>\n",
    "description": "<p>Whether to automatically load vim-one when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.one.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/one.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable vim-one.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.one.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/one.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">vim-one</span></span>\n",
    "description": "<p>The vim-one package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.one.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/one.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The configuration options for <strong>one</strong> without the <code>one_</code> prefix.</p>\n<p>For example, the following settings are equivialent to these <code>:setglobal</code> commands:</p>\n<ul>\n<li><code>foo_bar = 1</code> -&gt; <code>:setglobal one_foo_bar=1</code></li>\n<li><code>hello = &quot;world&quot;</code> -&gt; <code>:setglobal one_hello=&quot;world&quot;</code></li>\n<li><code>some_toggle = true</code> -&gt; <code>:setglobal one_some_toggle</code></li>\n<li><code>other_toggle = false</code> -&gt; <code>:setglobal noone_other_toggle</code></li>\n</ul>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">allow_italics</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.one.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/one.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0</code></p>",
    "description": "<p>Whether to enable <em>italic</em> (as long as your terminal supports it).</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (one of 0, 1) or raw lua code",
    "name": "colorschemes.one.settings.allow_italics"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load onedark.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.onedark.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable onedark.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.onedark.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for onedark.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.onedark.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for onedark.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.onedark.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.onedark.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.onedark.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.onedark.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.onedark.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.onedark.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">onedark-nvim</span></span>\n",
    "description": "<p>The onedark.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.onedark.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/onedark.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('onedark').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">bright_orange</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#ff8800&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">green</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#00ffaa&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">highlights</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"string\">&quot;@function&quot;</span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">fg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#0000ff&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">fmt</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;underline,italic&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">sp</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;$cyan&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"string\">&quot;@function.builtin&quot;</span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">fg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#0059ff&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"string\">&quot;@keyword&quot;</span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">fg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;$green&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"string\">&quot;@string&quot;</span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">bg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;#00ff00&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">fg</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;$bright_orange&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">fmt</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;bold&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.onedark.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/oxocarbon.nix"
    ],
    "default": "<span class=\"variable\">true</span>\n",
    "description": "<p>Whether to automatically load oxocarbon.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.oxocarbon.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/oxocarbon.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable oxocarbon.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.oxocarbon.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/oxocarbon.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">oxocarbon-nvim</span></span>\n",
    "description": "<p>The oxocarbon.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.oxocarbon.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load palette.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.palette.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable palette.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.palette.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for palette.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.palette.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for palette.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.palette.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.palette.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.palette.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.palette.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.palette.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.palette.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">palette-nvim</span></span>\n",
    "description": "<p>The palette.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.palette.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('palette').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.palette.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  __raw = &quot;vim.fn.stdpath('cache') .. '/palette'&quot;;\n}\n</code></pre>",
    "description": "<p>Cache directory.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.palette.settings.cache_dir"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to enable caching.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.palette.settings.caching"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Custom palettes for accent colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((submodule) or raw lua code)) or raw lua code",
    "name": "colorschemes.palette.settings.custom_palettes.accent"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Custom palettes for main colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((submodule) or raw lua code)) or raw lua code",
    "name": "colorschemes.palette.settings.custom_palettes.main"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Custom palettes for state colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((submodule) or raw lua code)) or raw lua code",
    "name": "colorschemes.palette.settings.custom_palettes.state"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Whether to use italics.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.palette.settings.italics"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;pastel&quot;</code></p>",
    "description": "<p>Palette for the accent colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.palette.settings.palettes.accent"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;dark&quot;</code></p>",
    "description": "<p>Palette for the main colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.palette.settings.palettes.main"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;pastel&quot;</code></p>",
    "description": "<p>Palette for the state colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.palette.settings.palettes.state"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/palette.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to use transparent background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.palette.settings.transparent_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load poimandres.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.poimandres.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable poimandres.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.poimandres.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for poimandres.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.poimandres.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for poimandres.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.poimandres.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.poimandres.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.poimandres.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.poimandres.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.poimandres.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.poimandres.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">poimandres-nvim</span></span>\n",
    "description": "<p>The poimandres.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.poimandres.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('poimandres').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">bold_vert_split</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">dim_nc_background</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">disable_background</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">disable_float_background</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">disable_italics</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.poimandres.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Use bold vertical separators.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.poimandres.settings.bold_vert_split"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;main&quot;</code></p>",
    "description": "<p>Dark variant.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.poimandres.settings.dark_variant"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Dim 'non-current' window backgrounds.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.poimandres.settings.dim_nc_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to disable the background.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.poimandres.settings.disable_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to disable the background for floats.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.poimandres.settings.disable_float_background"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Whether to disable italics.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.poimandres.settings.disable_italics"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Which color to use for each group.</p>\n<p>default: see <a href=\"https://github.com/olivercederborg/poimandres.nvim/blob/main/lua/poimandres/init.lua\">source</a></p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or attribute set of string))",
    "name": "colorschemes.poimandres.settings.groups"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/poimandres.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Highlight groups.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.poimandres.settings.highlight_groups"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load rose-pine when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.rose-pine.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable rose-pine.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.rose-pine.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for rose-pine.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.rose-pine.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for rose-pine</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.rose-pine.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.rose-pine.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.rose-pine.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.rose-pine.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.rose-pine.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.rose-pine.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">rose-pine</span></span>\n",
    "description": "<p>The rose-pine package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.rose-pine.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('rose-pine').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">before_highlight</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;function(group, highlight, palette) end&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">dark_variant</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;moon&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">dim_inactive_windows</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">enable</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">legacy_highlights</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">migrations</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">terminal</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">extend_background_behind_borders</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">groups</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">border</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;muted&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">link</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;iris&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">panel</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;surface&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">highlight_groups</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">styles</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">bold</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">transparency</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">variant</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;auto&quot;</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.rose-pine.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;function(group, highlight, palette) end&quot;</code></p>",
    "description": "<p>Called before each highlight group, before setting the highlight.</p>\n<p><code>function(group, highlight, palette)</code></p>\n<pre><code class=\"language-lua\">  @param group string\n  @param highlight Highlight\n  @param palette Palette\n</code></pre>\n",
    "example": null,
    "read_only": false,
    "type": "null or lua function string",
    "name": "colorschemes.rose-pine.settings.before_highlight"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;main&quot;</code></p>",
    "description": "<p>Set the desired dark variant when <code>settings.variant</code> is set to &quot;auto&quot;.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"main\", \"moon\", \"dawn\" or raw lua code",
    "name": "colorschemes.rose-pine.settings.dark_variant"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Differentiate between active and inactive windows and panels.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.rose-pine.settings.dim_inactive_windows"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Enable legacy highlights.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.rose-pine.settings.enable.legacy_highlights"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Enable migrations.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.rose-pine.settings.enable.migrations"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Enable terminal.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.rose-pine.settings.enable.terminal"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Extend background behind borders.\nAppearance differs based on which border characters you are using.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.rose-pine.settings.extend_background_behind_borders"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Highlight groups.</p>\n<p>default: see <a href=\"https://github.com/rose-pine/neovim/blob/main/lua/rose-pine/config.lua\">source</a></p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of (string or attribute set of string))",
    "name": "colorschemes.rose-pine.settings.groups"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>{ }</code></p>",
    "description": "<p>Custom highlight groups.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set of ((attribute set) or raw lua code)) or raw lua code",
    "name": "colorschemes.rose-pine.settings.highlight_groups"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Enable bold.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.rose-pine.settings.styles.bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Enable italic.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.rose-pine.settings.styles.italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>true</code></p>",
    "description": "<p>Enable transparency.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.rose-pine.settings.styles.transparency"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/rose-pine.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Set the desired variant: &quot;auto&quot; will follow the vim background, defaulting to <code>dark_variant</code>\nor &quot;main&quot; for dark and &quot;dawn&quot; for light.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"auto\", \"main\", \"moon\", \"dawn\"",
    "name": "colorschemes.rose-pine.settings.variant"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>false</code> when lazy-loading is enabled.</p>",
    "description": "<p>Whether to automatically load tokyonight.nvim when neovim starts.</p>\n",
    "example": "<span class=\"variable\">false</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.tokyonight.autoLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">false</span>\n",
    "description": "<p>Whether to enable tokyonight.nvim.</p>",
    "example": "<span class=\"variable\">true</span>\n",
    "read_only": false,
    "type": "boolean",
    "name": "colorschemes.tokyonight.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy-load settings for tokyonight.nvim.</p>\n<blockquote>\n<p>[!WARNING]\nThis is an experimental option and may not work as expected with all plugins.\nThe API may change without notice.\nPlease report any issues you encounter.</p>\n</blockquote>\n",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.tokyonight.lazyLoad"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>true</code> when <code>settings</code> has a non-null attribute</p>",
    "description": "<p>lazy-loading for tokyonight.nvim</p>\n",
    "example": null,
    "read_only": false,
    "type": "unspecified value",
    "name": "colorschemes.tokyonight.lazyLoad.enable"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Lazy provider configuration settings.</p>\n<p>Check your lazy loading provider's documentation on settings to configure.</p>\n",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">cmd</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Neotest&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">keys</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-1</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;leader&gt;nt&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">__unkeyed-3</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;&lt;CMD&gt;Neotest summary&lt;CR&gt;&quot;</span><span class=\"punctuation-delimiter\">;</span>\n      <span class=\"property\"><span class=\"variable\">desc</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;Summary toggle&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.tokyonight.lazyLoad.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>The plugin's lua configuration</p>",
    "example": null,
    "read_only": false,
    "type": "submodule",
    "name": "colorschemes.tokyonight.luaConfig"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"string\">&quot;&quot;</span>\n",
    "description": "<p>Configuration of the plugin.</p>\n<p>If <code>pre</code> and/or <code>post</code> are non-null, they will be merged using the order priorities\n300 and 300\nrespectively.</p>\n",
    "example": null,
    "read_only": false,
    "type": "strings concatenated with \"\\n\"",
    "name": "colorschemes.tokyonight.luaConfig.content"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the end of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkAfterSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.tokyonight.luaConfig.post"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Lua code inserted at the start of the plugin's configuration.\nThis is the same as using <code>lib.nixvim.utils.mkBeforeSection</code> when defining <code>content</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or strings concatenated with \"\\n\"",
    "name": "colorschemes.tokyonight.luaConfig.pre"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">pkgs</span><span class=\"punctuation-delimiter\">.</span><span class=\"property\"><span class=\"variable\">vimPlugins</span><span class=\"punctuation-delimiter\">.</span><span class=\"variable\">tokyonight-nvim</span></span>\n",
    "description": "<p>The tokyonight.nvim package to use.</p>",
    "example": null,
    "read_only": false,
    "type": "package",
    "name": "colorschemes.tokyonight.package"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span>\n",
    "description": "<p>Options provided to the <code>require('tokyonight').setup</code> function.</p>",
    "example": "<span class=\"punctuation-bracket\">{</span>\n  <span class=\"property\"><span class=\"variable\">day_brightness</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"number\">0.3</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">dim_inactive</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">hide_inactive_statusline</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">light_style</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;day&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">lualine_bold</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">on_colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;function(colors) end&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">on_highlights</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;function(highlights, colors) end&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">sidebars</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">[</span>\n    <span class=\"string\">&quot;qf&quot;</span>\n    <span class=\"string\">&quot;vista_kind&quot;</span>\n    <span class=\"string\">&quot;terminal&quot;</span>\n    <span class=\"string\">&quot;packer&quot;</span>\n  <span class=\"punctuation-bracket\">]</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">style</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;storm&quot;</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">styles</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n    <span class=\"property\"><span class=\"variable\">comments</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">floats</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;dark&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">functions</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">keywords</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span>\n      <span class=\"property\"><span class=\"variable\">italic</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">sidebars</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"string\">&quot;dark&quot;</span><span class=\"punctuation-delimiter\">;</span>\n    <span class=\"property\"><span class=\"variable\">variables</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"punctuation-bracket\">{</span> <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"punctuation-bracket\">}</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">terminal_colors</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">true</span><span class=\"punctuation-delimiter\">;</span>\n  <span class=\"property\"><span class=\"variable\">transparent</span></span> <span class=\"punctuation-delimiter\">=</span> <span class=\"variable\">false</span><span class=\"punctuation-delimiter\">;</span>\n<span class=\"punctuation-bracket\">}</span>\n",
    "read_only": false,
    "type": "attribute set of anything",
    "name": "colorschemes.tokyonight.settings"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>0.3</code></p>",
    "description": "<p>Adjusts the brightness of the colors of the <strong>Day</strong> style.\nNumber between 0 and 1, from dull to vibrant colors.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0.0 and 1.0 (both inclusive) or raw lua code",
    "name": "colorschemes.tokyonight.settings.day_brightness"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Dims inactive windows.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.tokyonight.settings.dim_inactive"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>Enabling this option will hide inactive statuslines and replace them with a thin border instead.\nShould work with the standard <strong>StatusLine</strong> and <strong>LuaLine</strong>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.tokyonight.settings.hide_inactive_statusline"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;day&quot;</code></p>",
    "description": "<p>The theme to use when the background is set to <code>light</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.tokyonight.settings.light_style"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>false</code></p>",
    "description": "<p>When true, section headers in the lualine theme will be bold.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or boolean or raw lua code",
    "name": "colorschemes.tokyonight.settings.lualine_bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;function(colors) end&quot;</code></p>",
    "description": "<p>Override specific color groups to use other groups or a hex color.\nFunction will be called with a <code>ColorScheme</code> table.\n<code>@param colors ColorScheme</code></p>\n",
    "example": null,
    "read_only": false,
    "type": "null or lua function string",
    "name": "colorschemes.tokyonight.settings.on_colors"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;function(highlights, colors) end&quot;</code></p>",
    "description": "<p>Override specific highlights to use other groups or a hex color.\nFunction will be called with a <code>Highlights</code> and <code>ColorScheme</code> table.\n<code>@param highlights Highlights</code>\n<code>@param colors ColorScheme</code></p>\n",
    "example": null,
    "read_only": false,
    "type": "null or lua function string",
    "name": "colorschemes.tokyonight.settings.on_highlights"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">[\n  &quot;qf&quot;\n  &quot;help&quot;\n]\n</code></pre>",
    "description": "<p>Set a darker background on sidebar-like windows.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (list of (string or raw lua code)) or raw lua code",
    "name": "colorschemes.tokyonight.settings.sidebars"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em> <code>&quot;moon&quot;</code></p>",
    "description": "<p>The theme comes in four styles, <code>moon</code>, <code>storm</code>, a darker variant <code>night</code>, and <code>day</code>.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or one of \"moon\", \"storm\", \"night\", \"day\" or raw lua code",
    "name": "colorschemes.tokyonight.settings.style"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<p><code>null</code></p>\n<p><em>Plugin default:</em></p>\n<pre><code class=\"language-nix\">{\n  italic = true;\n}\n</code></pre>",
    "description": "<p>Define comments highlight properties.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or (attribute set)",
    "name": "colorschemes.tokyonight.settings.styles.comments"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the background (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.tokyonight.settings.styles.comments.bg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Integer between 0 and 100.</p>",
    "example": null,
    "read_only": false,
    "type": "null or integer or floating point number between 0 and 100 (both inclusive)",
    "name": "colorschemes.tokyonight.settings.styles.comments.blend"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.tokyonight.settings.styles.comments.bold"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>cterm attribute map, like |highlight-args|.\nIf not set, cterm attributes will match those from the attribute map documented above.</p>\n",
    "example": null,
    "read_only": false,
    "type": "null or string or (attribute set)",
    "name": "colorschemes.tokyonight.settings.styles.comments.cterm"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets background of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.tokyonight.settings.styles.comments.ctermbg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Sets foreground of cterm color.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.tokyonight.settings.styles.comments.ctermfg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Don't override existing definition.</p>",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.tokyonight.settings.styles.comments.default"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Color for the foreground (color name or '#RRGGBB').</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.tokyonight.settings.styles.comments.fg"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "",
    "example": null,
    "read_only": false,
    "type": "null or boolean",
    "name": "colorschemes.tokyonight.settings.styles.comments.italic"
  },
  {
    "declarations": [
      "https://github.com/nix-community/nixvim/blob/main/plugins/colorschemes/tokyonight.nix"
    ],
    "default": "<span class=\"variable\">null</span>\n",
    "description": "<p>Name of another highlight group to link to.</p>",
    "example": null,
    "read_only": false,
    "type": "null or string or raw lua code",
    "name": "colorschemes.tokyonight.settings.styles.comments.link"
  }
]
